function App (props) {
    const handleSubmit = (evt) => {
      evt.preventDefault();
  
      console.log('Данные формы', {});
    };
  
    return (
      <form onSubmit={handleSubmit} className="form">
        <p className="form-field">
          <label htmlFor="email">Электронная почта</label>
          <input
            name="email"
            id="email"
            type="email"
            value={props.email || ''}
          />
        </p>
        <button className="form-submit">Подписаться на новости</button>
      </form>
    );
  };
  
  export default App;

//   С управляемыми компонентами мы познакомились в предыдущем разделе. Напомним, когда мы применяем управляемые компоненты, состояние элементов формы контролирует сам React. Этот способ применяется часто, но в некоторых случаях, этот вариант не подходит. Например, когда требуется работать с DOM-элементом напрямую. В таких случаях следует применять неконтролируемые компоненты.

// Вернёмся к примеру кода. Наш компонент использует пропс value. С его помощью мы пытаемся подставить значение по умолчанию для поля ввода. Это значение мы берём из пропса email. Подход работает, но в поле ввода ничего нельзя ввести.